{% comment %}

A snippet to include a search bar anywhere in your theme.
Note we are using 'input-group' for the layout. Look under Forms > Input Groups for some demos.

More information:
- http://docs.shopify.com/themes/liquid-variables/search

Return only products or pages in results:
- http://docs.shopify.com/manual/configuration/store-customization/return-only-product-in-storefront-search-results
- Or manually add type=product or type=page to the search URL as a parameter

{% endcomment %}
{% if settings.show_header_search %}
<div class="searchbox">
  <form action="/search" method="get" class="input-group search-bar navbar-form search" role="search">
    {% comment %}
    Uncomment the following hidden input to only show products in your search results
    {% endcomment %}
    {% comment %}<input type="hidden" name="type" value="product">{% endcomment %}

    <input type="text" name="q" class="input-group-field input__field-2" aria-label="Search Site" autocomplete="off">
    <label class="input_label-2">
      <span class="input_label-content-2">{{ settings.search_placeholder }}</span>
    </label>
    <span class="input-group-btn">
      <button type="submit" class="" value="Search"></button>
    </span>
  </form>
</div>
{% endif %}
<script>
  (function() {
    // trim polyfill : https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim
    if (!String.prototype.trim) {
      (function() {
        // Make sure we trim BOM and NBSP
        var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
        String.prototype.trim = function() {
          return this.replace(rtrim, '');
        };
      })();
    }

    [].slice.call( document.querySelectorAll( 'input.input__field-2' ) ).forEach( function( inputEl ) {
      // in case the input is already filled..
      if( inputEl.value.trim() !== '' ) {
        classie.add( inputEl.parentNode, 'input--filled-2' );
      }

      // events:
      inputEl.addEventListener( 'focus', onInputFocus );
      inputEl.addEventListener( 'blur', onInputBlur );
    } );

    function onInputFocus( ev ) {
      classie.add( ev.target.parentNode, 'input--filled-2' );
    }

    function onInputBlur( ev ) {
      if( ev.target.value.trim() === '' ) {
        classie.remove( ev.target.parentNode, 'input--filled-2' );
      }
    }
  })();
</script>